(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{335:function(t,n,i){"use strict";i.r(n);var r=i(25),s=Object(r.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"属性值initial、inherit、unset、revert的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#属性值initial、inherit、unset、revert的区别"}},[t._v("#")]),t._v(" 属性值initial、inherit、unset、revert的区别")]),t._v(" "),n("p",[t._v("这四个 CSS 属性值 initial、inherit、unset 和 revert 都与元素样式的继承和重置有关，但它们的作用方式略有不同：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("initial (初始值):")]),t._v(" 将属性设置为浏览器样式表中定义的默认值。 每个属性都有其初始值，例如，background-color 的初始值为 transparent，font-size 的初始值为 medium，display 的初始值为 inline 等等。 使用 initial 会忽略任何继承的样式、样式表中的样式规则以及内联样式。 它会将属性恢复到最原始的状态。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("inherit (继承值):")]),t._v(" 将属性值设置为与其父元素相同的值。 如果父元素没有设置该属性，则会继续向上查找祖先元素，直到找到一个设置了该属性的元素，或者到达根元素为止。 inherit 允许你轻松地将样式从父元素传递给子元素，而无需为每个子元素单独设置样式。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("unset (未设置值):")]),t._v(" 这是一个混合值。 对于继承属性（例如 font-family、color），unset 的行为与 inherit 相同。 对于非继承属性（例如 background-color、width），unset 的行为与 initial 相同。 unset 提供了一种便捷的方式来重置属性，而无需考虑该属性是否可继承。")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("revert (还原值):")]),t._v(" 将属性值还原到用户代理样式表中定义的默认值。 这与 initial 不同，因为用户代理样式表可能包含用户自定义的样式或浏览器扩展程序添加的样式。 revert 旨在将样式恢复到用户预期的默认状态，即使该状态与浏览器内置的初始值不同。 在某些情况下，revert 的行为可能与 unset 相同，尤其是在没有用户自定义样式或浏览器扩展程序影响的情况下。")])])]),t._v(" "),n("p",[n("strong",[t._v("总结表格:")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("值")]),t._v(" "),n("th",[t._v("继承属性")]),t._v(" "),n("th",[t._v("非继承属性")]),t._v(" "),n("th",[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("strong",[t._v("initial")])]),t._v(" "),n("td",[t._v("初始值")]),t._v(" "),n("td",[t._v("初始值")]),t._v(" "),n("td",[t._v("属性的浏览器默认值。")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("inherit")])]),t._v(" "),n("td",[t._v("继承父元素")]),t._v(" "),n("td",[t._v("继承父元素")]),t._v(" "),n("td",[t._v("从父元素继承值。")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("unset")])]),t._v(" "),n("td",[t._v("继承父元素")]),t._v(" "),n("td",[t._v("初始值")]),t._v(" "),n("td",[t._v("继承属性继承父元素值，非继承属性设置为初始值。")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("revert")])]),t._v(" "),n("td",[t._v("用户代理样式表")]),t._v(" "),n("td",[t._v("用户代理样式表")]),t._v(" "),n("td",[t._v("还原到用户代理表的值，可能包含用户自定义样式或者浏览器扩展程序添加的样式")])])])]),t._v(" "),n("p",[t._v("示例：")]),t._v(" "),n("p",[t._v("假设你有一个带有蓝色文本的 div 元素，并且它的子元素是一个 span 元素：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<div style="color: blue;">\n  <span style="color: inherit;">继承的蓝色文本</span>\n  <span style="color: initial;">黑色的文本 (color 的初始值为 black)</span>\n  <span style="color: unset;">继承的蓝色文本 (color 是继承属性)</span>\n  <span style="color: revert;">黑色的文本 (假设没有用户自定义样式)</span>\n</div>\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])])])}),[],!1,null,null,null);n.default=s.exports}}]);